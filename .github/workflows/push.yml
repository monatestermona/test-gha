name: Workflow for Webhook

on:
  push:
  # Sequence of patterns matched against refs/tags
   # tags:
    #  - 'v*' # Push events to matching v*, i.e. v1.0, v1.0.0

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Build and Test
      shell: bash
      run: |
        echo "Build and Test as asdfsdf asdf asdfs sadfsd asdfsdff bbccccdddd asdfd asdf yyyyy asd asdf   asdfdf "
        echo "BUILD_STATE=successful" >> $GITHUB_ENV
    - name: Failed Build
      if: failure()
      run: echo "BUILD_STATE=failed" >> $GITHUB_ENV
    - name: Parse Jira Keys from Commit
      id: jira_keys
      if: always()
      uses: HighwayThree/jira-extract-issue-keys@master
      with:
        is-pull-request: ${{ github.event_name == 'pull_request' }}
        parse-all-commits: ${{ github.event_name == 'push' }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Push Build Info to Jira
      if: steps.jira_keys.outputs.jira-keys != ''
      id: push_build_info_to_jira
      uses: HighwayThree/jira-upload-build-info@master
      with:
        client-id: '${{ secrets.CLIENT_ID }}'
        client-secret: '${{ secrets.CLIENT_SECRET }}'
        cloud-instance-base-url: '${{ secrets.CLOUD_INSTANCE_BASE_URL }}'
        pipeline-id: '${{ github.repository }} ${{ github.workflow }}'
        build-number: ${{ github.run_number }}
        build-display-name: 'Workflow: ${{ github.workflow }} (#${{ github.run_number }})'
        build-state: "${{ env.BUILD_STATE }}"
        build-url: '${{github.event.repository.url}}/actions/runs/${{github.run_id}}'
        update-sequence-number: '${{ github.run_id }}'
        last-updated: '${{github.event.head_commit.timestamp}}'
        issue-keys: "${{ steps.jira_keys.outputs.jira-keys }}"
        commit-id: '${{ github.sha }}'
        repo-url: '${{ github.event.repository.url }}'
        build-ref-url: '${{ github.event.repository.url }}/actions/runs/${{ github.run_id }}'
    - name: Confirm Jira Build Output
      if: success()
      run: |
        echo "Jira Upload Build Info response: ${{ steps.push_build_info_to_jira.outputs.response }}"

  deploy_to_test:
    runs-on: ubuntu-latest
    needs: build_and_test
    if: github.event_name == 'push' #&&  github.ref == 'refs/heads/release/1.0.0'
    steps:
      - name: Deploy to Test
        run: |
          echo "Deploying to Test..."
          echo "github.event_name: ${{github.event_name}}"
          echo "github.ref: ${{github.ref}}"
          echo "DEPLOY_STATE=successful"  >> $GITHUB_ENV
      - name: Failed Deployment
        if: failure()
        run: echo "DEPLOY_STATE=failed" >> $GITHUB_ENV
      - name: Parse Jira Keys from All Commits
        id: jira_keys
        if: always()
        uses: HighwayThree/jira-extract-issue-keys@master
        with:
          is-pull-request: ${{ github.event_name == 'pull_request' }}
          parse-all-commits: ${{ github.event_name == 'push' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Confirm Deploy State and Jira Key Values
        if: always()
        run: |
          echo "DEPLOY_STATE: ${{env.DEPLOY_STATE}}"
          echo "Jira Keys: ${{steps.jira_keys.outputs.jira-keys}}"
      - name: Push Deployment Info to Jira
        if: steps.jira_keys.outputs.jira-keys != ''
        id: push_deployment_info_to_jira
        uses: HighwayThree/jira-upload-deployment-info@master
        with:
          cloud-instance-base-url: '${{ secrets.CLOUD_INSTANCE_BASE_URL }}'
          client-id: '${{ secrets.CLIENT_ID }}'
          client-secret: '${{ secrets.CLIENT_SECRET }}'
          deployment-sequence-number: '${{ github.run_id }}'
          update-sequence-number: '${{ github.run_id }}'
          issue-keys: "${{ steps.jira_keys.outputs.jira-keys }}"
          display-name: "Deployment number asdf"
          url: "${{github.event.repository.url}}/actions/runs/${{github.run_id}}"
          description: "Test Deployment"
          last-updated: '${{github.event.head_commit.timestamp}}'
          label: 'Test Deployment Label'
          state: '${{env.DEPLOY_STATE}}'
          pipeline-id: '${{ github.repository }} ${{ github.workflow }}'
          pipeline-display-name: 'Workflow: ${{ github.workflow }} (#${{ github.run_number }})'
          pipeline-url: '${{github.event.repository.url}}/actions/runs/${{github.run_id}}'
          environment-id: 'Test'
          environment-display-name: 'Test'
          environment-type: 'testing'
      - name: Confirm Jira Deploy Output
        if: success()
        shell: bash
        run: |
          echo "Jira Upload Deploy Info response: ${{steps.push_deployment_info_to_jira.outputs.response}}"
        #  curl -X POST -H 'Content-type: application/json' --data '{"issues": [${{ toJSON(steps.jira_keys.outputs.jira-keys) }}], "data": {"releaseVersion":"5.3.2"}, "buildNumber": ${{ github.run_number }}, "issues": [${{ toJSON(steps.jira_keys.outputs.jira-keys) }}]}' "https://automation.atlassian.com/pro/hooks/a53aae5d84c64672265f49a009bb2ab9589eafbb"

  deploy_to_prod:
    runs-on: ubuntu-latest
    needs: build_and_test
    if: github.event_name == 'push' #&&  github.ref == 'refs/heads/master'
    steps:
      - name: Deploy to Prod
        run: |
          echo "github.event_name: ${{github.event_name}}"
          echo "github.ref: ${{github.ref}}"
          echo "DEPLOY_STATE=successful" >> $GITHUB_ENV
          echo "Deploying to Prod..."
      - name: Failed Deployment
        if: failure()
        run: echo "DEPLOY_STATE=failed" >> $GITHUB_ENV
      - name: Parse Jira Keys from All Commits
        id: jira_keys
        if: always()
        uses: HighwayThree/jira-extract-issue-keys@master
        with:
          is-pull-request: ${{ github.event_name == 'pull_request' }}
          parse-all-commits: ${{ github.event_name == 'push' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Confirm Deploy State and Jira Key Values
        if: always()
        run: |
          echo "DEPLOY_STATE: ${{env.DEPLOY_STATE}}"
          echo "Jira Keys: ${{steps.jira_keys.outputs.jira-keys}}"
      - name: Push Deployment Info to Jira
        if: steps.jira_keys.outputs.jira-keys != ''
        id: push_deployment_info_to_jira
        uses: HighwayThree/jira-upload-deployment-info@master
        with:
          cloud-instance-base-url: '${{ secrets.CLOUD_INSTANCE_BASE_URL }}'
          client-id: '${{ secrets.CLIENT_ID }}'
          client-secret: '${{ secrets.CLIENT_SECRET }}'
          deployment-sequence-number: '${{ github.run_id }}'
          update-sequence-number: '${{ github.run_id }}'
          issue-keys: "${{ steps.jira_keys.outputs.jira-keys }}"
          display-name: "Deployment number: '${{ github.run_id }}'"
          url: "${{github.event.repository.url}}/actions/runs/${{github.run_id}}"
          description: "Prod Deployment"
          last-updated: '${{github.event.head_commit.timestamp}}'
          label: 'Prod Deployment Label'
          state: '${{env.DEPLOY_STATE}}'
          pipeline-id: '${{ github.repository }} ${{ github.workflow }}'
          pipeline-display-name: 'Workflow: ${{ github.workflow }} (#${{ github.run_number }})'
          pipeline-url: '${{github.event.repository.url}}/actions/runs/${{github.run_id}}'
          environment-id: 'Prod'
          environment-display-name: 'Prod'
          environment-type: 'production'
      - name: Push Deployment Info to Jira
        if: steps.jira_keys.outputs.jira-keys != ''
        id: push_deployment_info_to_jira
        uses: actions/checkout@v1
        uses: GeoWerkstatt/create-jira-release@v1
        with:
          jira-project-key: 'MYEX'
          jira-automation-webhook: ${{ secrets.WEBHOOK_URL }}
          build-version: v${{ env.VERSION }}
      
  
      #  shell: bash
      #  run: |
      #    echo "Jira Production Deploy Info response:  ${{steps.push_deployment_info_to_jira.outputs.response}}"
        #  curl -X POST -H 'Content-type: application/json' --data '{"issues": [${{ toJSON(steps.jira_keys.outputs.jira-keys) }}], "data": {"releaseVersion":"5.3.2"}, "buildNumber": ${{ github.run_number }}, "issues": [${{ toJSON(steps.jira_keys.outputs.jira-keys) }}]}' "https://automation.atlassian.com/pro/hooks/a53aae5d84c64672265f49a009bb2ab9589eafbb"
  
      # Generate changelog with Jira projects / Tickets
 #     - name: Checkout
 #       uses: actions/checkout@v2
 #       
 #     - name: Jirafy Changelog
 #       id: changelog
 #       uses: onXmaps/jirafy-changelog@v1.0.0
 #       with:
 #         mytoken: ${{ secrets.GITHUB_TOKEN }}
 #         jiraHost: ${{ secrets.JIRA_HOST }}
#
 #     # Sync the changelog with Jira projects / Tickets
 #     - name: Jirafy Sync
 #       uses: onXmaps/jirafy-sync@v2.0.1
 #       with:
 #         changelog: ${{ steps.changelog.outputs.changelog }}
 #         jiraVersion: ${{github.ref_name}}
 #         jiraHost: ${{ secrets.JIRA_HOST }}
 #         jiraUsername: ${{ secrets.JIRA_USERNAME }}
 #         jiraToken: ${{ secrets.JIRA_TOKEN }}
    
